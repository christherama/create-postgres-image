on:
  workflow_call:
    inputs:
      docker-registry:
        description: Docker registry
        required: false
        type: string
      docker-username:
        description: Docker registry username
        required: false
        type: string
      docker-password:
        description: Docker registry password or token
        required: false
        type: string
      postgres-version:
        description: Database engine version
        required: true
        type: string
      postgres-username:
        description: Postgres username to use when starting new database
        default: postgres
        required: false
        type: string
      postgres-password:
        description: Postgres password to use when starting new database
        default: password
        required: false
        type: string
      postgres-database:
        description: Database name
        default: postgres
        required: false
        type: string
      command-image-repository:
        description: Docker image repository to use for pulling image used for running commands
        required: true
        type: string
      command-image-tag:
        description: Tag to use when pulling image used for running commands
        required: true
        type: string
      command-env:
        description: Multiline environment variable values, .env style
        required: false
        type: string
      run:
        description: Command(s) to run on specified container
        required: true
        type: string
      postgres-image-repository:
        description: Docker image repository to use for pushing generated Postgres image
        required: true
        type: string
      postgres-image-tag:
        description: Tag to use for generated Postgres image
        required: true
        type: string

jobs:
  set-docker-password:
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.pw.outputs.DOCKER_PASSWORD }}
    steps:
      - id: pw
        run: |
          USER_PROVIDED_PASSWORD=$${{ inputs.docker-password }}
          PW=${USER_PROVIDED_PASSWORD:-${{ secrets.GITHUB_TOKEN }}}
          echo "DOCKER_PASSWORD=${PW}" >> $GITHUB_OUTPUT
  create-data:
    name: Create and dump data
    runs-on: ubuntu-22.04
    needs:
      - set-docker-password
    services:
      postgres:
        image: bitnami/postgresql:${{ inputs.postgres-version }}
        env:
          POSTGRES_USER: ${{ inputs.postgres-username }}
          POSTGRES_PASSWORD: ${{ inputs.postgres-password }}
          POSTGRES_DB: ${{ inputs.postgres-database }}
          POSTGRES_POSTGRES_PASSWORD: ${{ inputs.postgres-password }}
        options: --health-cmd "CMD-SHELL pg_isready -U ${{ inputs.postgres-username }}" --health-interval=5s
        ports:
          - 5432:5432
    container:
      image: ${{ inputs.command-image-repository }}:${{ inputs.command-image-tag }}
      credentials:
        username: ${{ inputs.docker-username }}
        password: ${{ needs.set-docker-password.outputs.DOCKER_PASSWORD }}
    steps:
      - name: Run commands
        run: |
          mkdir .data
          chmod a+w .data
          export $(echo ${{ inputs.command-env }} | xargs)
          ${{ inputs.run }}
      - name: Perform pg_dump
        uses: addnab/docker-run-action@v3
        with:
          image: bitnami/postgresql:${{ inputs.postgres-version }}
          options: -v ${{ github.workspace }}/.data:/tmp/pgdump -e PGPASSWORD=${{ inputs.postgres-password }}
          run: |
            pg_dump \
              --host=postgres \
              --dbname=${{ inputs.postgres-database }} \
              --username=${{ inputs.postgres-username }} \
              --no-owner \
              --no-privileges \
              --compress=9 \
              --file=/tmp/pgdump/data.sql.gz
      - name: Upload pg_dump archive
        uses: actions/upload-artifact@v3
        with:
          name: pg-data
          path: ./.data/data.sql.gz
  build-postgres-image:
    name: Build postgres image
    runs-on: ubunutu-22.04
    needs:
      - set-docker-password
    steps:
      - uses: actions/checkout@v3
        with:
          repository: christherama/create-postgres-image
          ref: v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ inputs.docker-username }}
          password: ${{ needs.set-docker-password.outputs.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            POSTGRES_VERSION=${{ inputs.postgres-version }}
          push: true
          tags: ${{ inputs.postgres-image-repository }}:${{ inputs.postgres-image-tag }}
