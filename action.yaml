name: Create and Push Postgres Docker Image
description: Creates a Postgres database image with an generated snapshot of data

inputs:
  docker-registry:
    description: Docker registry
    required: false
  docker-username:
    description: Docker registry username
    required: false
  docker-password:
    description: Docker registry password or token
    required: false
  postgres-version:
    description: Database engine version
    required: true
  postgres-username:
    description: Postgres username to use when starting new database
    default: postgres
    required: false
  postgres-password:
    description: Postgres password to use when starting new database
    default: password
    required: false
  postgres-database:
    description: Database name
    default: postgres
    required: false
  command-image-repository:
    description: Docker image repository to use for pulling image used for running commands
    required: true
  command-image-tag:
    description: Tag to use when pulling image used for running commands
    required: true
  command-env:
    description: Multiline environment variable values
    required: false
  run:
    description: Command(s) to run on specified container
    required: true
  postgres-image-repository:
    description: Docker image repository to use for pushing generated Postgres image
    required: true
  postgres-image-tag:
    description: Tag to use for generated Postgres image
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
      with:
        repository: christherama/create-postgres-image
        ref: v1
    - name: Create pg_dump archive
      uses: ./pg-dump.yaml
      with:
        docker-registry: ${{ inputs.docker-registry }}
        docker-username: ${{ inputs.docker-username }}
        docker-password: ${{ inputs.docker-password }}
        postgres-version: ${{ inputs.postgres-version }}
        postgres-username: ${{ inputs.postgres-username }}
        postgres-password: ${{ inputs.postgres-password }}
        postgres-database: ${{ inputs.postgres-database }}
        command-image-repository: ${{ inputs.command-image-repository }}
        command-image-tag: ${{ inputs.command-image-tag }}
        command-env: ${{ inputs.command-env }}
        run: ${{ inputs.run }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        build-args: |
          POSTGRES_VERSION=${{ inputs.postgres-version }}
        push: true
        tags: ${{ inputs.postgres-image-repository }}:${{ inputs.postgres-image-tag }}
